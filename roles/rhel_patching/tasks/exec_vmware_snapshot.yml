 ### Obtención de información de máquina virtual de VMware ###
    - name: Definir la creacion de snapshot 
      ansible.builtin.set_fact:
        make_snapshot: "{{ true | default(false) }}"
      when: snapshot_required == 'Si'
      
    - name: "iLiverpool | Actualización RHEL | Obtener respaldos y parchado de maquinas"
      when: make_snapshot|bool
      block:  

        - name: "Liverpool | Actualización RHEL | Obtener informacion de maquinas virtuales en VMWare"
          community.vmware.vmware_vm_info:
            hostname: '{{ lookup("env", "VMWARE_HOST") }}'
            username: '{{ lookup("env", "VMWARE_USER") }}'
            password: '{{ lookup("env", "VMWARE_PASSWORD") }}'
          delegate_to: localhost
          register: result_vmware_info
          
        - name: "Liverpool | Actualización RHEL | Obtener informacion de maquina virtual con IP  en VMWare"
          ansible.builtin.set_fact:
            vmware_vm_info: "{{ result_vmware_info.virtual_machines | selectattr('ip_address','eq',ansible_host) | map(attribute='guest_name')| list  }}"
            vm_moid: "{{ result_vmware_info.virtual_machines | selectattr('ip_address','eq',ansible_host) | map(attribute='moid')| list  }}"
            
        - name: "Liverpool | Actualización RHEL | Formateo de variable "
          ansible.builtin.set_fact:
            vm_info: "{{ vmware_vm_info[0] | trim }}"

        - name: "Liverpool | Actualización RHEL | Generar nombre de snapshot"
          ansible.builtin.set_fact: 
            snapshot_name: "{{ ticket }}_{{ vmware_vm_info[0] }}_2D"
        
        - name: "Liverpool | Actualización RHEL | Generar snapshot"
          community.vmware.vmware_guest_snapshot:
            hostname: '{{ lookup("env", "VMWARE_HOST") }}'
            username: '{{ lookup("env", "VMWARE_USER") }}'
            password: '{{ lookup("env", "VMWARE_PASSWORD") }}'
            datacenter: "{{ result_vmware_info.virtual_machines.0.datacenter }}"
            folder: "{{ result_vmware_info.virtual_machines.0.folder }}"
            moid: "{{ vm_moid[0] }}"
            name: "{{ vm_info | lower }}"
            state: present
            snapshot_name: "{{ snapshot_name }}"
            validate_certs: no
          delegate_to: localhost
          register: result_vmware_snapshot
      
      rescue:
      - name: Mensaje
        ansible.builtin.debug:
          msg: "Ooops algo paso"

